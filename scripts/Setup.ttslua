local Object    = require("Mods.TheBoxTable.constants.Object")
local GameState = require("Mods.TheBoxTable.scripts.GameState")
local Command   = require("BeaverStash.Command")
local Log       = require("BeaverStash.Log")
local BUI       = require("BeaverStash.BUI")

local MainMenu  = require("Mods.TheBoxTable.scripts.MainMenu")
local SetupUI   = require("Mods.TheBoxTable.ui.Setup")
MainMenu.addButton("Setup", SetupUI.MainPanel)

GameState.isGameSetup = false

---@param btn bs__BUIButton
---@param player tts__Player
---@param btnCode "3" | "2" | "1" | "-1" | "-2" | "-3"
local function runSetup(btn, player, btnCode)
    if GameState.isGameSetup then return end
    local coloredErrorLabel = SetupUI.ErrorLabel:getSeatElement(btn.color)

    local amount            = --[[---@type number ]] SetupUI.NumberOfSetupCards:getSeatElement(btn.color):getInputNumber()
    if amount == nil then return coloredErrorLabel:setText("Please enter a starting card amount!") end
    if amount <= 0 then return coloredErrorLabel:setText("Please enter a number above 0!") end

    local StarterCards = --[[---@not nil]]
    (
            GameState.StarterCardRules == "Normal"
                    and
                    Object.StarterCards:find()
    )
            or
            Object.AlternateStarterCards:find()

    if Object.StarterCards.obj == nil then
        return coloredErrorLabel:setText("Starter Cards are not in their designated spot!")
    end

    if StarterCards.getQuantity() < amount then
        return coloredErrorLabel:setText("The Starter Cards deck only has " .. StarterCards.getQuantity() .. " cards and not " .. amount .. ".\nPlease input an appropriate amount.")
    end

    local BasicBox = --[[---@not nil]] Object.BasicBox:find()
    if Object.BasicBox.obj == nil then
        return coloredErrorLabel:setText("Basic Box is not in it's designated spot!")
    end

    if GameState.StarterCardRules == "Normal" then
        StarterCards.shuffle()
        for i = 1, amount do
            StarterCards.takeObject({
                smooth            = false,
                callback_function = function(card)
                    BasicBox.putObject(card)
                    if i == amount then
                        BasicBox.shuffle()
                        BasicBox.deal(2)

                        broadcastToAll("Play any \"[ff0000]Play Immediately[-]\" cards in your hand!")
                    end
                end
            })
        end
    elseif GameState.StarterCardRules == "Alternate" then
        local StarterCardsCounter = --[[---@not nil]] Object.AlternateStarterCardsCounter:find()
        if StarterCardsCounter == nil then
            return coloredErrorLabel:setText("Starter Cards Counter is not in it's designated spot!")
        end

        StarterCardsCounter.Counter.setValue(amount)

        StarterCards.shuffle()

        BasicBox.shuffle()
        BasicBox.deal(2)

        broadcastToAll("Play any \"[ff0000]Play Immediately[-]\" cards in your hand!")
    end

    GameState.isGameSetup = true
    SetupUI.StartSetupButton:executeOnAll(function(el)
        el:setInteractable(false)
    end)
end

SetupUI.StartSetupButton:executeOnAll(function(el)
    el.onClick = runSetup
end)

--local SeatRect = --[[---@type bs__BUIElementSeatManager<bs__BUIPanel> ]]BUI.createElementSeatManager("BUIPanel", "SeatRect")
-- SeatRect:executeOnAll(function(el)
--     el:setBackgroundColor(Color.fromString(el.color))
--     el:setVisibility(el.color)
--     el:setSize(100, 100)
--     el:setRectAlignment("MiddleRight")
-- end)
--
--local SeatText = --[[---@type bs__BUIElementSeatManager<bs__BUIText> ]]BUI.createElementSeatManager("BUIText", "SeatText", SeatRect)
--SeatText:executeOnAll(function(el)
--    el:setText(el.color)
--end)

-- UI

